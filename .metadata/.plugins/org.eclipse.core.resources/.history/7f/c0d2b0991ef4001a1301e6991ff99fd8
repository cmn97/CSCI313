public class LinkedListPoly {
	
	private NodePoly head, tail;
	private int size;
	
	public LinkedListPoly() {
		head = tail = null;
		size = 0;
	}
	
	public int size() {
		return size;
	}
	
	public boolean isEmpty() {
		return size == 0;
	}
	
	public void addHead(int x, int y) {
		NodePoly n = new NodePoly(x,y,head);
		head = n;
		size++;
		if(tail == null) tail = head;
	}
	
	public void addTail(int x, int y) {
	      NodePoly n = new NodePoly(x, y, null);
	      if (tail == null)
	         head = tail = n;
	      else {
	         tail.setNext(n);
	         tail = n;
	      }
	      size++;
	   }
	
	public int getPower(int index) {
		NodePoly n = head;
		for(int i = 0; i < index; i++) {
			if (i == index-1) return n.getPower();
			n = n.getNext();
		}
		return 0;
	}
	
	public int getCoeff(int index) {
		NodePoly n = head;
		for(int i = 0; i < index; i++) {
			if (i == index-1) return n.getCoeff();
			n = n.getNext();
		}
		return 0;
	}
}